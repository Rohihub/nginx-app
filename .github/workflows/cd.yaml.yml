name: Nginx Docker CI/CD
 
on:
  push:
    branches:
      - main
 
jobs:
  build-deploy:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
 
      - name: Create custom HTML
        run: |
          mkdir -p html
          echo "<h1>hi prabhat this is your web page!</h1>" > html/index.html
          echo "<h2>Welcome to my webpage</h2>" >> html/index.html
 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
 
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 \
            | docker login --username AWS --password-stdin 281523502096.dkr.ecr.us-east-1.amazonaws.com
 
      - name: Build and push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_URI=281523502096.dkr.ecr.us-east-1.amazonaws.com/ecr_nginx_app:$IMAGE_TAG
          LATEST_URI=281523502096.dkr.ecr.us-east-1.amazonaws.com/ecr_nginx_app:latest
          echo "Building and pushing image: $IMAGE_URI"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          docker tag $IMAGE_URI $LATEST_URI
          docker push $LATEST_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "LATEST_URI=$LATEST_URI" >> $GITHUB_ENV
 
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Export AWS credentials for ECR login
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_DEFAULT_REGION=us-east-1
 
            # Authenticate EC2 with ECR
            aws ecr get-login-password --region us-east-1 \
              | docker login --username AWS --password-stdin 281523502096.dkr.ecr.us-east-1.amazonaws.com
 
            # Stop old container if exists
            docker stop nginx-app || true
            docker rm nginx-app || true
 
            # Pull and run new image
            docker pull 281523502096.dkr.ecr.us-east-1.amazonaws.com/ecr_nginx_app:latest
            docker run -d -p 80:80 --name nginx-app 281523502096.dkr.ecr.us-east-1.amazonaws.com/ecr_nginx_app:latest